{"version":3,"file":"App.js","sourceRoot":"","sources":["../src/App.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Board from \"./components/board\";\r\nimport GameMenu from \"./components/gameMenu\";\r\nimport Lobby from \"./components/lobby/lobby\";\r\nimport GamePreview from \"./components/gamePreview\";\r\nimport Game from \"./game\";\r\nimport { GAMEMODE } from \"./game\";\r\nimport InputName from \"./components/inputName\";\r\nimport { SIDE } from \"./config\";\r\nimport { IPlayer } from \"./components/lobby/lobby\";\r\n\r\nimport { socket } from \"./main\";\r\n\r\n\r\ntype Color = \"black\" | \"white\";\r\n\r\ntype State = {\r\n    name: string;\r\n    games: Game[];\r\n    newGameError: string;\r\n    currentGame: Game | null;\r\n    players: IPlayer[];\r\n    nameTaken: boolean;\r\n}\r\ntype Props = {\r\n\r\n}\r\n\r\nexport default class App extends React.Component<Props, State> {\r\n\r\n    menuPosition: \"center\" | \"right\";\r\n    gameId: number;\r\n    justStarted: boolean;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            games: [],\r\n            newGameError: \"\",\r\n            currentGame: null,\r\n            players: [],\r\n            nameTaken: false,\r\n        }\r\n        this.menuPosition = 'center';\r\n        this.gameId = 0;\r\n        this.justStarted = true;\r\n\r\n    }\r\n\r\n    setName = (name: string) => {\r\n        this.requestPlayerList()\r\n        this.setState({name});\r\n    }\r\n\r\n\r\n    getLabel(mode: GAMEMODE) {\r\n        switch (mode) {\r\n            case GAMEMODE.BOT:\r\n                return 'vsComp';\r\n            case GAMEMODE.LOCAL:\r\n                return \"local\";\r\n            case GAMEMODE.ONLINE:\r\n                return \"player\";\r\n        }\r\n    }\r\n\r\n    connect(name: string) {\r\n        socket.emit(\"player-connected\", name);\r\n    }\r\n\r\n\r\n\r\n    startNewGame = (gameMode: GAMEMODE, side: SIDE, color: Color) => {\r\n        if (this.checkNameTaken(this.state.name, this.state.players)) {\r\n            this.setState({ newGameError: \"Name is taken\" });\r\n            return false;\r\n        } else if (this.state.games.length < 4 && this.state.name.length > 0) {\r\n            if (this.justStarted) {\r\n                this.connect(this.state.name);\r\n            }\r\n            this.setState((state) => {\r\n                this.justStarted = false;\r\n                const label = this.getLabel(gameMode);\r\n                let game = new Game(gameMode, color, SIDE.CUSTOM, label, this.gameId++);\r\n                this.menuPosition = \"right\";\r\n                return {\r\n                    games: [game, ...state.games],\r\n                    currentGame: game,\r\n                    newGameError: \"\",\r\n                }\r\n            })\r\n            return true;\r\n        } else if (this.state.games.length == 4) {\r\n            this.setState({ newGameError: \"Games max quantity reached. Close a game\" });\r\n            return false;\r\n\r\n        } else {\r\n            this.setState({ newGameError: \"Enter your name\" });\r\n            return false;\r\n        }\r\n    }\r\n\r\n    switchGame = (id: number) => {\r\n        const game = this.state.games.filter((game) => game.id == id)[0];\r\n        if (game) {\r\n            this.setState({\r\n                currentGame: game\r\n            })\r\n        }\r\n    }\r\n\r\n    requestPlayerList() {\r\n        socket.emit(\"request_players_list\");\r\n    }\r\n    checkNameTaken(name: string, players: IPlayer[]) {\r\n        let taken = players.filter((player) => name == player.name);\r\n        if (taken.length > 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    closeGame = (gameId: number) => {\r\n        this.setState((state) => {\r\n            return {\r\n                games: state.games.filter((game) => game.id != gameId),\r\n                currentGame: null,\r\n            }\r\n        })\r\n    }\r\n    restartGame =() => {\r\n        const game = this.state.currentGame;\r\n\r\n        if (game) {\r\n            let index = this.state.games.findIndex((g) => {\r\n                return g.id == game.id;\r\n            });\r\n            let games = this.state.games;\r\n            const newGame = new Game(game.gameMode, game.playerColor, game.side, game.label, game.id);\r\n            games[index] = newGame;\r\n            this.setState({games, currentGame: newGame});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        socket.on(\"get_players\", (players) => {\r\n            this.setState({ players })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let games = this.state.games;\r\n\r\n        if (!this.justStarted) {\r\n            return (\r\n                <div id=\"app\" className=\"app\">\r\n                    <GamePreview games={games} switchGame={this.switchGame} closeGame={this.closeGame}/>\r\n                    <Lobby name={this.state.name} />\r\n                    <GameMenu startNewGame={this.startNewGame}\r\n                        centered={false}\r\n                        error={this.state.newGameError}\r\n                    />\r\n                    {this.state.currentGame && <Board game={this.state.currentGame} restartGame={this.restartGame} />}\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <>\r\n                <InputName setName={this.setName} />\r\n                <GameMenu\r\n                    centered={true}\r\n                    startNewGame={this.startNewGame}\r\n                    error={this.state.newGameError}\r\n                />\r\n                </>\r\n            \r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n"]}