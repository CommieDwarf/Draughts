{"version":3,"file":"context-menu.js","sourceRoot":"","sources":["../../../src/components/board/context-menu.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {IChessboard} from \"../../engine\";\r\n\r\n\r\nexport default class ContextMenu extends React.Component {\r\n\r\n    ctxMenuRef: React.RefObject<HTMLDivElement>\r\n\r\n    props: {\r\n        queen: boolean;\r\n        piece: string;\r\n        id: number;\r\n        chessboard: IChessboard;\r\n    }\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.props = props;\r\n        this.state = {}\r\n    }\r\n\r\n    onClickTopHandler = () => {\r\n        let props = this.props\r\n        if (props.queen) {\r\n            props.chessboard[props.id][\"queen\"] = false;\r\n        } else if (props.piece) {\r\n            props.chessboard[props.id]['queen'] = true;\r\n        } else {\r\n            props.chessboard[props.id][\"piece\"] = \"black\";\r\n        }\r\n    }\r\n    onClickBotHandler = () => {\r\n        let props = this.props\r\n        if (props.queen) {\r\n            props.chessboard[props.id][\"piece\"] = \"\";\r\n            props.chessboard[props.id][\"queen\"] = false;\r\n        } else if (props.piece) {\r\n            props.chessboard[props.id]['piece'] = \"\";\r\n        } else {\r\n            props.chessboard[props.id][\"piece\"] = \"white\";\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let contextMenu =  \r\n        if (contextMenu) {\r\n            let attribute = \"left: \" + this.state.contextMenu.clientX + \"px; \"\r\n            attribute += \"top: \" + this.state.contextMenu.clientY + \"px; \"\r\n            if (this.state.contextMenu.showMenu) {\r\n                attribute += \"visibility: visible\";\r\n            } else {\r\n                attribute += \"visibility: hidden\";\r\n            }\r\n            contextMenu.setAttribute(\"style\", attribute);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let props = this.props;\r\n\r\n        let label1\r\n        let label2\r\n        \r\n        if (props.queen) {\r\n            label1 = \"queen\";\r\n            label2 = \"remove\";\r\n        } else if (props.piece) {\r\n            label1 = \"queen\";\r\n            label2 = \"remove\";\r\n        } else {\r\n            label1 = \"black\";\r\n            label2 = \"white\";\r\n        }\r\n        \r\n        return (\r\n            <div className = \"context-menu\" ref={this.props.ctxRef}>\r\n                <div className=\"context-menu__label\" onClick={this.onClickTopHandler}> \r\n                {label1}\r\n                </div>\r\n                <hr/>\r\n                <div className=\"context-menu__label\" onClick={this.onClickBotHandler}> \r\n                {label2}\r\n                </div>\r\n                <br></br>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}"]}