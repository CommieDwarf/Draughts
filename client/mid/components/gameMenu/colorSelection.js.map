{"version":3,"file":"colorSelection.js","sourceRoot":"","sources":["../../../src/components/gameMenu/colorSelection.tsx"],"names":[],"mappings":";;;;;AAAA,gDAAuD;AAavD,SAAwB,cAAc,CAAC,KAAY;IAE/C,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,IAAI,OAAO,CAAC,CAAC,gBAAa,CAAC,iBAAc,CAAC;IAGhE,SAAS,WAAW;QAChB,IAAM,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QACrF,IAAI,SAAS,EAAE;YACX,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACtB;aAAM;YACH,KAAK,CAAC,QAAQ,CAAC,8CAA8C,CAAC,CAAC;SAClE;IACL,CAAC;IAED,OAAO,CACH,uCAAK,SAAS,EAAE,kBAAkB,EAAE,OAAO,EAAE,WAAW,IACnD,KAAK,CAAC,KAAK,CACV,CACT,CAAA;AACL,CAAC;AAnBD,iCAmBC","sourcesContent":["import React, { Dispatch, SetStateAction} from \"react\";\r\nimport { SIDE } from \"../../config\";\r\nimport { GAMEMODE } from \"../../game\";\r\ntype Color = \"black\" | \"white\";\r\n\r\ntype Props = {\r\n    color: \"white\" | \"black\";\r\n    gameMode: GAMEMODE;\r\n    startNewGame: (gameMode: GAMEMODE, side: SIDE, color: Color, label: string) => boolean;\r\n    label: string;\r\n    setError: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nexport default function ColorSelection(props: Props) {\r\n\r\n    let side = props.color == \"white\" ? SIDE.NORMAL : SIDE.REVERSED;\r\n\r\n    \r\n    function handleClick() {\r\n        const isStarted = props.startNewGame(props.gameMode, side, props.color, props.label);\r\n        if (isStarted) {\r\n            props.setError(\"\");\r\n        } else {\r\n            props.setError(\"Game quantity limit reached. Close some game\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={\"game-menu__color\"} onClick={handleClick}>\r\n            {props.color}\r\n        </div>\r\n    )\r\n}\r\n"]}