{"version":3,"file":"chat.js","sourceRoot":"","sources":["../../../src/components/lobby/chat.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Message from \"./message\";\r\nimport { IPlayer } from \"./lobby\";\r\nimport { socket } from \"../../main\";\r\nimport Emojis  from \"./emojis\";\r\n\r\n\r\ntype IMessage = {\r\n    content: string,\r\n    author: IPlayer,\r\n    room: {\r\n        id: string,\r\n        name: string,\r\n    },\r\n}\r\n\r\ntype Props = {};\r\ntype State = {\r\n    messages: IMessage[],\r\n    message: string,\r\n    someoneWriting: boolean,\r\n    showEmojis: boolean,\r\n}\r\n\r\nexport default class Chat extends React.Component<Props, State> {\r\n\r\n    props: {\r\n        player: IPlayer;\r\n        currentRoom: {\r\n            name: string,\r\n            id: string,\r\n        },\r\n        createRoom: (name: string) => void;\r\n        rooms: {\r\n            name: string,\r\n            id: string\r\n        }[],\r\n        setRoomProperty: (id: string, propertyName: string, propertyValue: any) => void;\r\n    }\r\n\r\n    thisPlayerId: string\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.props = props;\r\n        this.state = {\r\n            messages: [],\r\n            message: \"\",\r\n            someoneWriting: false,\r\n            showEmojis: false,\r\n        }\r\n        this.thisPlayerId = socket.id;\r\n    }\r\n\r\n    scrollToBot() {\r\n        const msgsDiv = document.getElementById('messages');\r\n            if (msgsDiv) {\r\n                msgsDiv.scrollBy({top: msgsDiv.scrollHeight + 9999});\r\n            }\r\n    }\r\n\r\n    sendMesage = () => {\r\n        if (this.state.message.replace(/\\s/g, '').length) {\r\n            socket.emit(\"done_writing\");\r\n            socket.emit(\"send_message\", {content: this.state.message, author: this.props.player, room: this.props.currentRoom});\r\n            this.setState((prev) => {\r\n                return {\r\n                    messages: [...prev.messages, {content: this.state.message, author: this.props.player, room: this.props.currentRoom}],\r\n                    message: \"\",\r\n                }\r\n            })\r\n            this.scrollToBot();            \r\n        }\r\n        document.getElementById(\"input\")?.focus();\r\n    }\r\n\r\n    receiveMessage(message: IMessage) {\r\n        if (!this.props.rooms.some((room) => room.id == message.room.id)) {\r\n            this.props.createRoom(message.author.name);\r\n        }\r\n        if (message.room.id !== this.props.currentRoom.id) {\r\n            this.props.setRoomProperty(message.room.id, \"unread\", true);\r\n        }\r\n        this.setState((prevState) => {\r\n            return {\r\n                messages: [...prevState.messages, message]\r\n            }\r\n        })\r\n        this.scrollToBot();\r\n    }\r\n\r\n    onChangeHandler = (event: any) => {\r\n        const target = event.target as HTMLInputElement;\r\n        this.setState({message: target.value});\r\n        socket.emit(\"writing\")\r\n        setTimeout(() => {\r\n            socket.emit(\"done_writing\")\r\n        }, 4000)\r\n    }\r\n\r\n    handleEnter = (event: KeyboardEvent) => {\r\n        if (event.key == \"Enter\") {\r\n            this.sendMesage()\r\n        }\r\n    }\r\n\r\n    toggleEmojis = () => {\r\n        if (this.state.showEmojis) {\r\n            this.setState({showEmojis: false})\r\n        } else {\r\n            this.setState({showEmojis: true});\r\n        }\r\n    }\r\n\r\n    pickEmoji = (emoji: string) => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                message: prevState.message + \" \" + emoji + \" \"\r\n            }\r\n        });\r\n    }\r\n    \r\n    handleOutsideClick = (event: MouseEvent) => {\r\n        const target = event.target as HTMLElement;\r\n        if (!target.closest('.lobby__emoji-container') && !target.closest(\".lobby__emo-button\")) {\r\n            this.setState({showEmojis: false})\r\n        }\r\n    }\r\n\r\n    setEmojiBottom() {\r\n        const emoContainer = document.getElementById('emoji-container');\r\n        const msgsDiv = document.getElementById('messages');\r\n        if (emoContainer && msgsDiv) {\r\n            emoContainer.setAttribute(\"style\", \"top: \" + (msgsDiv.scrollHeight - 85) + \"px\");\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.handleEnter);\r\n\r\n        socket.on(\"get_message\", (message) => {\r\n            this.receiveMessage(message);\r\n        })\r\n        socket.on(\"someone_writing\", () => {\r\n            this.setState({someoneWriting: true});\r\n        })\r\n        socket.on(\"done_writing\", () => {\r\n            this.setState({someoneWriting: false});\r\n        })\r\n\r\n        document.addEventListener(\"click\", this.handleOutsideClick)\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.handleEnter);\r\n        socket.off()\r\n        document.removeEventListener(\"click\", this.handleOutsideClick)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToBot();\r\n        this.setEmojiBottom();\r\n    }\r\n\r\n    render() {\r\n        let messages = this.state.messages.map((msg, id) =>  {\r\n            if (msg.room.id == this.props.currentRoom.id) {\r\n                return (\r\n                <Message author={msg.author}\r\n                 content={msg.content} key={id}\r\n                  thisPlayerId={this.thisPlayerId}/>\r\n                  )\r\n            }\r\n        })\r\n\r\n\r\n        const emoButtonClass = this.state.showEmojis ? \"white color-black\" : \"\";\r\n\r\n        return (\r\n            <div className=\"lobby__chat\">\r\n                    <div className=\"lobby__messages\">\r\n                        {messages}\r\n                        {this.state.someoneWriting && <div className=\"lobby__someone-writing\">\r\n                            Someone is writing\r\n                            <div className=\"lobby__dot-wrapper lobby__dot-wrapper--1\">\r\n                                <div id=\"dot-1\" className=\"lobby__dot\"></div>\r\n                            </div>\r\n                            <div id=\"dot-wrapper-2\" className=\"lobby__dot-wrapper\">\r\n                                <div id=\"dot-2\" className=\"lobby__dot\"></div>\r\n                            </div>\r\n                            <div id=\"dot-wrapper-3\" className=\"lobby__dot-wrapper\">\r\n                                <div id=\"dot-3\" className=\"lobby__dot\"></div>\r\n                            </div>\r\n                        </div>}\r\n                        {this.state.showEmojis && <Emojis pickEmoji={this.pickEmoji}/>}\r\n                    </div>\r\n                        <input className=\"lobby__input\" \r\n                        type=\"text\"\r\n                         onChange={this.onChangeHandler}\r\n                          value={this.state.message}\r\n                          autoComplete=\"off\">\r\n                        </input>\r\n                    \r\n                    <div className={\"lobby__emo-button no-select \" + emoButtonClass} onClick={this.toggleEmojis}>\r\n                        <i className=\"icon-emo-happy\"></i>\r\n                    </div>\r\n                    <div className=\"lobby__send-button no-select\" onClick={this.sendMesage}>\r\n                    <i className=\"icon-right-open-outline\"></i>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}"]}