{"version":3,"file":"message.js","sourceRoot":"","sources":["../../../src/components/lobby/message.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,gDAA2D;AAC3D,oDAA8B;AAG9B,mCAAgC;AAChC,mCAAkC;AAGlC;IAAqC,2BAAe;IAQhD,iBAAY,KAAU;QAAtB,YACI,kBAAM,KAAK,CAAC,SAGf;QAFG,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;IAEvB,CAAC;IAKD,wBAAM,GAAN;QACI,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAGjC,IAAI,IAAI,GAAe,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAGpD,IAAI,OAAO,GAAmB,EAAE,CAAC;QAEjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,eAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC1B,OAAO,CAAC,IAAI,CAAC,uCAAK,SAAS,EAAC,sBAAsB;oBAAC,uCAAK,GAAG,EAAE,aAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE,SAAS,EAAC,qBAAqB,EAAC,GAAG,EAAE,CAAC,GAAQ,CAAM,CAAC,CAAA;aAC9I;iBAAM;gBACH,OAAO,CAAC,IAAI,CAAC,wCAAM,GAAG,EAAE,CAAC,IAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAQ,CAAC,CAAA;aACrD;SACJ;QAGD,IAAI,cAAc,GAAG,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE;YACjD,cAAc,GAAG,6BAA6B,CAAC;SAClD;QAGD,OAAO,CACH,uCAAK,SAAS,EAAC,gBAAgB;YACf,uCAAK,SAAS,EAAC,uBAAuB;gBAClC,uCAAK,EAAE,EAAC,SAAS,EAAC,SAAS,EAAC,uBAAuB;oBAC3C,8BAAC,gBAAM,IAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,GAAG;oBACrG,wCAAM,SAAS,EAAE,qBAAqB,GAAG,cAAc;wBAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI;4BAAS,CACvF,CACJ;YACN,uCAAK,SAAS,EAAE,yBAAyB,IACpC,OAAO,CACN,CACJ,CACrB,CAAA;IACL,CAAC;IACL,cAAC;AAAD,CAAC,AAxDD,CAAqC,eAAK,CAAC,SAAS,GAwDnD","sourcesContent":["import React, { createElement, ReactElement } from \"react\";\r\nimport Avatar from \"./avatar\";\r\n\r\nimport { IPlayer } from \"./lobby\";\r\nimport { path } from \"./emojis\";\r\nimport { emojis } from \"./emojis\";\r\n\r\n\r\nexport default class Message extends React.Component {\r\n\r\n    props: {\r\n        author: IPlayer,\r\n        content: string,\r\n        thisPlayerId: string;\r\n    }\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.props = props;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const author = this.props.author;\r\n\r\n        \r\n        let text: (string)[] = this.props.content.split(\" \")\r\n\r\n\r\n        let message: ReactElement[] = [];\r\n\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (emojis.includes(text[i])) {\r\n                message.push(<div className=\"lobby__emoji-wrapper\"><img src={path + text[i] + \".png\"} className=\"lobby__inline-emoji\" key={i}></img></div>)\r\n            } else {\r\n                message.push(<span key={i}>{text[i] + \" \"}</span>)\r\n            }\r\n        } \r\n\r\n\r\n        let msgAuthorClass = \"\";\r\n\r\n        if (this.props.thisPlayerId == this.props.author.id) {\r\n            msgAuthorClass = \"lobby__author-name--current\";\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"lobby__message\">\r\n                            <div className=\"lobby__message-author\">\r\n                                <div id=\"player1\" className=\"lobby__message-author\">\r\n                                        <Avatar shape={author.avatar.shape} theme={author.avatar.theme} name={author.name} small={true}/>\r\n                                    <span className={\"lobby__author-name \" + msgAuthorClass}>{this.props.author.name}:</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={\"lobby__message-content \"}>\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n        )\r\n    }\r\n}"]}