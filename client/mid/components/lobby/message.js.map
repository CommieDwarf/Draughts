{"version":3,"file":"Message.js","sourceRoot":"","sources":["../../../src/components/lobby/Message.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,gDAA2C;AAC3C,oDAA8B;AAG9B,mCAAgC;AAChC,0DAAoC;AAQpC;IAAqC,2BAAsB;IAEzD,iBAAY,KAAU;eACpB,kBAAM,KAAK,CAAC;IACd,CAAC;IAED,wBAAM,GAAN;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAEjC,IAAI,IAAI,GAAa,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEnD,IAAI,OAAO,GAAmB,EAAE,CAAC;QAEjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,mBAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC/B,OAAO,CAAC,IAAI,CACV,uCAAK,SAAS,EAAC,sBAAsB;oBACnC,uCACE,GAAG,EAAE,aAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,EAC5B,SAAS,EAAC,qBAAqB,EAC/B,GAAG,EAAE,CAAC,GACD,CACH,CACP,CAAC;aACH;iBAAM;gBACL,OAAO,CAAC,IAAI,CAAC,wCAAM,GAAG,EAAE,CAAC,IAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAQ,CAAC,CAAC;aACpD;SACF;QAED,IAAI,cAAc,GAAG,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE;YACnD,cAAc,GAAG,6BAA6B,CAAC;SAChD;QAED,OAAO,CACL,uCAAK,SAAS,EAAC,gBAAgB;YAC7B,uCAAK,SAAS,EAAC,uBAAuB;gBACpC,uCAAK,EAAE,EAAC,SAAS,EAAC,SAAS,EAAC,uBAAuB;oBACjD,8BAAC,gBAAM,IACL,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,EAC1B,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,EAC1B,IAAI,EAAE,MAAM,CAAC,IAAI,EACjB,KAAK,EAAE,IAAI,GACX;oBACF,wCAAM,SAAS,EAAE,qBAAqB,GAAG,cAAc;wBACpD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI;4BAClB,CACH,CACF;YACN,uCAAK,SAAS,EAAE,yBAAyB,IAAG,OAAO,CAAO,CACtD,CACP,CAAC;IACJ,CAAC;IACH,cAAC;AAAD,CAAC,AAtDD,CAAqC,eAAK,CAAC,SAAS,GAsDnD","sourcesContent":["import React, {ReactElement } from \"react\";\r\nimport Avatar from \"./Avatar\";\r\n\r\nimport { IPlayer } from \"./Lobby\";\r\nimport { path } from \"./Emojis\";\r\nimport emojiList from \"./emojiList\";\r\n\r\ninterface Props {\r\n  author: IPlayer;\r\n  content: string;\r\n  thisPlayerId: string;\r\n}\r\n\r\nexport default class Message extends React.Component<Props> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const author = this.props.author;\r\n\r\n    let text: string[] = this.props.content.split(\" \");\r\n\r\n    let message: ReactElement[] = [];\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n      if (emojiList.includes(text[i])) {\r\n        message.push(\r\n          <div className=\"lobby__emoji-wrapper\">\r\n            <img\r\n              src={path + text[i] + \".png\"}\r\n              className=\"lobby__inline-emoji\"\r\n              key={i}\r\n            ></img>\r\n          </div>\r\n        );\r\n      } else {\r\n        message.push(<span key={i}>{text[i] + \" \"}</span>);\r\n      }\r\n    }\r\n\r\n    let msgAuthorClass = \"\";\r\n\r\n    if (this.props.thisPlayerId == this.props.author.id) {\r\n      msgAuthorClass = \"lobby__author-name--current\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"lobby__message\">\r\n        <div className=\"lobby__message-author\">\r\n          <div id=\"player1\" className=\"lobby__message-author\">\r\n            <Avatar\r\n              shape={author.avatar.shape}\r\n              theme={author.avatar.theme}\r\n              name={author.name}\r\n              small={true}\r\n            />\r\n            <span className={\"lobby__author-name \" + msgAuthorClass}>\r\n              {this.props.author.name}:\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className={\"lobby__message-content \"}>{message}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}