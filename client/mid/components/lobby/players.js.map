{"version":3,"file":"Players.js","sourceRoot":"","sources":["../../../src/components/lobby/Players.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAyC;AACzC,oDAA8B;AAG9B,mCAAoC;AAapC;IAAqC,2BAAgB;IAEnD,iBAAY,KAAU;eACpB,kBAAM,KAAK,CAAC;IACd,CAAC;IAED,wBAAM,GAAN;QAAA,iBAqCC;QApCC,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,EAAE;YAChD,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;YAClC,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;YAClC,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YAEzB,IAAI,SAAS,GAAG,EAAE,CAAC;YACnB,IAAI,aAAM,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE,EAAE;gBAC1B,SAAS,GAAG,wBAAwB,CAAC;aACtC;YACD,IAAI,YAAY,GAAG,KAAK,CAAC;YACzB,IACE,CAAC,KAAI,CAAC,KAAK,CAAC,aAAa,IAAI,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC;gBACtD,MAAM,CAAC,EAAE,KAAK,aAAM,CAAC,EAAE;gBACvB,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,EAAxB,CAAwB,CAAC,EAC1D;gBACA,YAAY,GAAG,IAAI,CAAC;aACrB;YACD,OAAO,CACL,uCACE,SAAS,EAAE,gBAAgB,EAC3B,GAAG,EAAE,EAAE,EACP,EAAE,EAAE,MAAM,CAAC,IAAI,EACf,OAAO,EAAE,KAAI,CAAC,KAAK,CAAC,kBAAkB;gBAEtC,8BAAC,gBAAM,IACL,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,YAAY,GACvB;gBACF,wCAAM,SAAS,EAAE,cAAc,GAAG,SAAS,IAAG,MAAM,CAAC,IAAI,CAAQ,CAC7D,CACP,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO,8DAAG,OAAO,CAAI,CAAC;IACxB,CAAC;IACH,cAAC;AAAD,CAAC,AA5CD,CAAqC,iBAAS,GA4C7C","sourcesContent":["import React, { Component } from \"react\";\r\nimport Avatar from \"./Avatar\";\r\nimport { IPlayer } from \"./Lobby\";\r\n\r\nimport { socket } from \"../../main\";\r\n\r\ninterface Props {\r\n  players: IPlayer[];\r\n  roomInvitable: boolean;\r\n  gameInvitable: boolean;\r\n  handlePlayerInvite: (event: any) => void;\r\n  rooms: {\r\n    name: string;\r\n    id: string;\r\n  }[];\r\n}\r\n\r\nexport default class Players extends Component<Props> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const players = this.props.players.map((player, id) => {\r\n      const theme = player.avatar.theme;\r\n      const shape = player.avatar.shape;\r\n      const name = player.name;\r\n\r\n      let spanClass = \"\";\r\n      if (socket.id == player.id) {\r\n        spanClass = \"lobby__player--current\";\r\n      }\r\n      let canBeInvited = false;\r\n      if (\r\n        (this.props.roomInvitable || this.props.gameInvitable) &&\r\n        player.id !== socket.id &&\r\n        !this.props.rooms.some((room) => room.name == player.name)\r\n      ) {\r\n        canBeInvited = true;\r\n      }\r\n      return (\r\n        <div\r\n          className={\"lobby__player \"}\r\n          key={id}\r\n          id={player.name}\r\n          onClick={this.props.handlePlayerInvite}\r\n        >\r\n          <Avatar\r\n            name={name}\r\n            shape={shape}\r\n            theme={theme}\r\n            invitable={canBeInvited}\r\n          />\r\n          <span className={\"player-name \" + spanClass}>{player.name}</span>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return <>{players}</>;\r\n  }\r\n}\r\n"]}