{"version":3,"file":"lobby.js","sourceRoot":"","sources":["../../../src/components/lobby/lobby.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { MouseEvent, Ref } from \"react\";\r\nimport Chat from \"./chat\";\r\nimport { socket } from \"../../main\";\r\nimport Players from \"./players\";\r\nimport Room from \"./room\";\r\nimport { GAMEMODE } from \"../../game\";\r\nimport { SIDE } from \"../../config\";\r\nimport GameInviation from \"./gameInvitation\"\r\nimport GameInvSent from \"./GameInvSent\";\r\n\r\nexport interface IPlayer {\r\n    name: string,\r\n    avatar: {\r\n        theme: string,\r\n        shape: string,\r\n    },\r\n    id: string,\r\n}\r\n\r\ntype Room = {\r\n    name: string,\r\n    id: string,\r\n    unread: boolean,\r\n    hover: boolean,\r\n    isWriting: boolean,\r\n}\r\n\r\ntype GameInfo = {\r\n    gameId: string,\r\n    playerAccepted: string,\r\n    playerAcceptedColor: string\r\n}\r\n\r\ntype Color = \"white\" | \"black\";\r\n\r\ntype Props = {\r\n\r\n}\r\ntype State = {\r\n    players: IPlayer[],\r\n    rooms: Room[],\r\n    currentRoom: Room,\r\n    roomInvitable: boolean,\r\n    gameInvitable: boolean,\r\n    gameInvitations: { gameId: string, author: string, target: string}[]\r\n    gameInvSent: { gameId: string, author: string, target: string }[]\r\n}\r\n\r\nexport default class Lobby extends React.Component<Props, State> {\r\n\r\n    props: {\r\n        name: string,\r\n        startNewGame: (gameMode: GAMEMODE, side: SIDE, color: Color, label: string, gameId: string) => boolean;\r\n    }\r\n    playersRef: React.RefObject<HTMLDivElement>\r\n    createRoomRef: React.RefObject<HTMLDivElement>\r\n    inviteRef: React.RefObject<HTMLDivElement>\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.props = props;\r\n        this.state = {\r\n            players: [],\r\n            currentRoom: { name: \"global room\", id: \"global\", unread: false, hover: false, isWriting: false },\r\n            rooms: [{ name: \"global room\", id: \"global\", unread: false, hover: false, isWriting: false }],\r\n            roomInvitable: false,\r\n            gameInvitable: false,\r\n            gameInvitations: [],\r\n            gameInvSent: [],\r\n        }\r\n        this.playersRef = React.createRef();\r\n        this.createRoomRef = React.createRef();\r\n        this.inviteRef = React.createRef();\r\n    }\r\n\r\n    handleClickInvite = () => {\r\n        this.setState({ gameInvitable: true });\r\n    }\r\n\r\n    getGameId(playerName1: string, playerName2: string) {\r\n        if (playerName1 > playerName2) {\r\n            return playerName1 + playerName2 + \"-game\";\r\n        } else {\r\n            return playerName2 + playerName1 + \"-game\";\r\n        }\r\n    }\r\n\r\n    getRoomId(name: string) {\r\n        let roomIdPart1;\r\n        let roomIdPart2;\r\n        if (name > this.props.name) {\r\n            roomIdPart1 = name;\r\n            roomIdPart2 = this.props.name;\r\n        } else {\r\n            roomIdPart1 = this.props.name;\r\n            roomIdPart2 = name;\r\n        }\r\n        return roomIdPart1 + roomIdPart2;\r\n    }\r\n\r\n    createRoom = (name: string) => {\r\n        let roomId = this.getRoomId(name);\r\n        if (!this.state.rooms.some((room) => room.name == name) && name !== this.props.name) {\r\n            const room = { author: this.props.name, target: name, id: roomId }\r\n            socket.emit(\"join_room\", room);\r\n            socket.emit(\"create_room\", room);\r\n            this.setState(prevState => {\r\n                const room = { name, id: roomId, unread: false, hover: false, isWriting: false }\r\n                return {\r\n                    rooms: [...prevState.rooms, room],\r\n                    currentRoom: room,\r\n                    roomInvitable: false,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    closeRoom = (name: string) => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                rooms: prevState.rooms.filter((room) => room.name != name)\r\n            }\r\n        })\r\n    }\r\n\r\n    acceptChallange = (name: string, gameId: string) => {\r\n        let randomNum = Math.floor(Math.random() * 2);\r\n        let authorColor : Color;\r\n        if (randomNum == 0) {\r\n            authorColor = \"white\";\r\n        } else {\r\n            authorColor = \"black\";\r\n        }\r\n        let side = authorColor == \"white\" ? SIDE.NORMAL : SIDE.REVERSED;\r\n        this.props.startNewGame(GAMEMODE.ONLINE, side, authorColor, name, gameId);\r\n        let gameInfo = {\r\n            gameId,\r\n            playerAccepted: this.props.name,\r\n            playerAcceptedColor: authorColor\r\n        }\r\n        socket.emit(\"accept_challange\", gameInfo);\r\n        this.filterOutGameInvites(name);\r\n    }\r\n\r\n    filterOutGameInvites = (name: string) => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                gameInvitations: prevState.gameInvitations.filter((inv) => inv.author != name),\r\n            }               \r\n        })\r\n    }\r\n    filterOutSentInvites = (name: string) => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                gameInvSent: prevState.gameInvSent.filter((inv) => inv.target != name )\r\n            }               \r\n        })\r\n    }\r\n\r\n    handlePlayerInvite = (event: React.MouseEvent) => {\r\n        const target = event.target as HTMLElement;\r\n        const player = target.closest(\".lobby__player\")\r\n\r\n\r\n        if (player && !this.state.rooms.some((room) => { room.name == player.id }) && this.state.roomInvitable) {\r\n            this.createRoom(player.id);\r\n        }\r\n        if (player && this.state.gameInvitable && player.id != this.props.name) {\r\n            socket.emit(\"request_join_game\", this.props.name);\r\n            socket.emit(\"join_game\", this.getGameId(player.id, this.props.name));\r\n            this.setState({gameInvitable: false});\r\n            if (!this.state.gameInvSent.some((inv) => inv.target == player.id)) {\r\n                const inv = {\r\n                    target: player.id, \r\n                    gameId: this.getGameId(player.id, this.props.name),\r\n                    author: this.props.name,\r\n                }\r\n                this.setState((prevState) => {\r\n                    return {\r\n                        gameInvSent: [...prevState.gameInvSent, inv]\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    handleClickNewRoom = () => {\r\n        this.setState({ roomInvitable: true });\r\n    }\r\n\r\n    handleOutsidePlayersClick = (event: any) => {\r\n        const { target } = event\r\n        if (!this.playersRef.current?.contains(target)) {\r\n            if (!this.createRoomRef.current?.contains(target)) {\r\n                this.setState({ roomInvitable: false });\r\n            }\r\n            if (!this.inviteRef.current?.contains(target)) {\r\n                this.setState({ gameInvitable: false });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    switchRoom = (room: Room) => {\r\n        if (room.id !== \"global\") {\r\n            this.setState({ currentRoom: room })\r\n        } else {\r\n            this.setState(prevState => {\r\n                return {\r\n                    currentRoom: prevState.rooms[0]\r\n                }\r\n            })\r\n        }\r\n        this.setRoomProperty(room.id, \"unread\", false);\r\n    }\r\n\r\n\r\n\r\n    setRoomProperty = (id: string, propertyName: string, propertyValue: any) => {\r\n        const rooms = this.state.rooms.filter((room) => room.id == id);\r\n        const room = rooms[0];\r\n        if (room instanceof Object && room) {\r\n            Object.defineProperty(room, propertyName, { value: propertyValue });\r\n            const index = this.state.rooms.findIndex((room) => room.id == id);\r\n            this.setState(prevState => {\r\n                return {\r\n                    rooms: [...prevState.rooms.slice(0, index), room, ...prevState.rooms.slice(index + 1, prevState.rooms.length)],\r\n                }\r\n            })\r\n            if (room.id == this.state.currentRoom.id) {\r\n                this.setState({ currentRoom: room })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        socket.on(\"players_update\", (players) => {\r\n            this.setState({ players })\r\n        })\r\n        socket.on(\"room_created\", (room) => {\r\n            if (this.props.name == room.target) {\r\n                socket.emit(\"join_room\", room);\r\n            }\r\n        })\r\n\r\n        socket.on(\"someone_writing\", (room) => {\r\n            this.setRoomProperty(room.id, 'isWriting', true);\r\n        })\r\n        socket.on(\"done_writing\", (room) => {\r\n            this.setRoomProperty(room.id, 'isWriting', false);\r\n        })\r\n\r\n        socket.on(\"requested_join_game\", (author) => {\r\n            const gameId = this.getGameId(author, this.props.name);\r\n            socket.emit(\"join_game\", (gameId))\r\n            if (!this.state.gameInvitations.some((inv) => inv.gameId == gameId)) {\r\n                this.setState((prevState) => {\r\n                    return {\r\n                        gameInvitations: [...prevState.gameInvitations, { author, gameId, target: this.props.name }]\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on(\"challange_accepted\", (gameInfo: GameInfo) => {\r\n            let color: Color;\r\n            color = gameInfo.playerAcceptedColor == \"white\" ? \"black\" : \"white\";\r\n            let side = color == \"white\" ? SIDE.NORMAL : SIDE.REVERSED;\r\n           \r\n            this.props.startNewGame(GAMEMODE.ONLINE, side, color, gameInfo.playerAccepted, gameInfo.gameId);\r\n            this.filterOutSentInvites(gameInfo.playerAccepted);\r\n        })\r\n\r\n        socket.on(\"player_disconnected\", (player) => {\r\n            this.filterOutGameInvites(player.name);\r\n            this.filterOutSentInvites(player.name);\r\n        })\r\n\r\n        document.addEventListener('click', this.handleOutsidePlayersClick);\r\n\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleOutsidePlayersClick);\r\n        socket.off();\r\n    }\r\n\r\n    render() {\r\n\r\n        const player = this.state.players.find((player) => player.name == this.props.name)\r\n\r\n        let rooms = this.state.rooms.map((room, id) => {\r\n            return <Room closeRoom={this.closeRoom}\r\n                setRoomProperty={this.setRoomProperty}\r\n                switchRoom={this.switchRoom}\r\n                room={room}\r\n                currentRoom={this.state.currentRoom}\r\n                key={id}\r\n            />\r\n        })\r\n\r\n        const gameInvitations = this.state.gameInvitations.map((inv, i) => {\r\n            return <GameInviation author={inv.author} \r\n            gameId={inv.gameId} key={i} target={inv.target}\r\n            acceptChallange={this.acceptChallange}\r\n            />\r\n        })\r\n\r\n        const gameInvSent = this.state.gameInvSent.map((inv, i) => {\r\n            return <GameInvSent target={inv.target} gameId={inv.gameId} key={i}/>\r\n        })\r\n\r\n        let inviteClass = \"\";\r\n        if (this.state.gameInvitable) {\r\n            inviteClass = \"lobby__invite-button--green\";\r\n        }\r\n\r\n        let newRoomButtonClass = \"\";\r\n        if (this.state.roomInvitable) {\r\n            newRoomButtonClass = \"lobby__new-room-button--green\";\r\n        }\r\n        return (\r\n            <div className=\"lobby\">\r\n\r\n                <div className={\"lobby__invite-button no-select \" + inviteClass} ref={this.inviteRef}\r\n                    onClick={this.handleClickInvite}>\r\n                    Invite\r\n                </div>\r\n                <div className=\"lobby__game-invitation\">\r\n                    {gameInvitations}\r\n                    {gameInvSent}\r\n                </div>\r\n                <div className=\"lobby__players\" ref={this.playersRef}>\r\n                    <Players players={this.state.players}\r\n                        roomInvitable={this.state.roomInvitable}\r\n                        gameInvitable={this.state.gameInvitable}\r\n                        handlePlayerInvite={this.handlePlayerInvite}\r\n                        rooms={this.state.rooms}\r\n                    />;\r\n                </div>\r\n                <div className=\"lobby__rooms\">\r\n                    {rooms}\r\n                    <div\r\n                        className={\"lobby__new-room-button no-select \" + newRoomButtonClass}\r\n                        onClick={this.handleClickNewRoom} ref={this.createRoomRef}>\r\n                        <i className=\"icon-user-plus\"></i>\r\n                    </div>\r\n                </div>\r\n                {player && <Chat player={player}\r\n                    currentRoom={this.state.currentRoom}\r\n                    createRoom={this.createRoom}\r\n                    rooms={this.state.rooms}\r\n                    setRoomProperty={this.setRoomProperty} isWriting={this.state.currentRoom.isWriting} />}\r\n            </div>\r\n        )\r\n    }\r\n}"]}