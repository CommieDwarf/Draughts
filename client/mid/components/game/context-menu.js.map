{"version":3,"file":"context-menu.js","sourceRoot":"","sources":["../../../src/components/game/context-menu.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,gDAA0B;AAI1B;IAAyC,+BAAe;IAQpD,qBAAY,KAAU;QAAtB,YACI,kBAAM,KAAK,CAAC,SAGf;QAED,uBAAiB,GAAG;YAChB,IAAI,KAAK,GAAG,KAAI,CAAC,KAAK,CAAA;YACtB,IAAI,KAAK,CAAC,KAAK,EAAE;gBACb,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;aAC/C;iBAAM,IAAI,KAAK,CAAC,KAAK,EAAE;gBACpB,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;aAC9C;iBAAM;gBACH,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;aACjD;QACL,CAAC,CAAA;QACD,uBAAiB,GAAG;YAChB,IAAI,KAAK,GAAG,KAAI,CAAC,KAAK,CAAA;YACtB,IAAI,KAAK,CAAC,KAAK,EAAE;gBACb,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;gBACzC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;aAC/C;iBAAM,IAAI,KAAK,CAAC,KAAK,EAAE;gBACpB,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;aAC5C;iBAAM;gBACH,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;aACjD;QACL,CAAC,CAAA;QAxBG,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,KAAI,CAAC,KAAK,GAAG,EAAE,CAAA;;IACnB,CAAC;IAyBD,4BAAM,GAAN;QACI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEvB,IAAI,MAAM,CAAA;QACV,IAAI,MAAM,CAAA;QAEV,IAAI,KAAK,CAAC,KAAK,EAAE;YACb,MAAM,GAAG,OAAO,CAAC;YACjB,MAAM,GAAG,QAAQ,CAAC;SACrB;aAAM,IAAI,KAAK,CAAC,KAAK,EAAE;YACpB,MAAM,GAAG,OAAO,CAAC;YACjB,MAAM,GAAG,QAAQ,CAAC;SACrB;aAAM;YACH,MAAM,GAAG,OAAO,CAAC;YACjB,MAAM,GAAG,OAAO,CAAC;SACpB;QAED,OAAO,CACH,uCAAK,SAAS,EAAG,aAAa,EAAC,EAAE,EAAE,aAAa;YAC5C,uCAAK,SAAS,EAAC,YAAY,EAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,IAC1D,MAAM,CACD;YACN,yCAAK;YACL,uCAAK,SAAS,EAAC,YAAY,EAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,IAC1D,MAAM,CACD;YACN,yCAAS,CACP,CACT,CAAA;IACL,CAAC;IAEL,kBAAC;AAAD,CAAC,AApED,CAAyC,eAAK,CAAC,SAAS,GAoEvD","sourcesContent":["import React from 'react';\r\nimport {Chessboard} from \"../../engine\";\r\n\r\n\r\nexport default class ContextMenu extends React.Component {\r\n\r\n    props: {\r\n        queen: boolean;\r\n        piece: string;\r\n        id: number;\r\n        chessboard: Chessboard;\r\n    }\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.props = props;\r\n        this.state = {}\r\n    }\r\n\r\n    onClickTopHandler = () => {\r\n        let props = this.props\r\n        if (props.queen) {\r\n            props.chessboard[props.id][\"queen\"] = false;\r\n        } else if (props.piece) {\r\n            props.chessboard[props.id]['queen'] = true;\r\n        } else {\r\n            props.chessboard[props.id][\"piece\"] = \"black\";\r\n        }\r\n    }\r\n    onClickBotHandler = () => {\r\n        let props = this.props\r\n        if (props.queen) {\r\n            props.chessboard[props.id][\"piece\"] = \"\";\r\n            props.chessboard[props.id][\"queen\"] = false;\r\n        } else if (props.piece) {\r\n            props.chessboard[props.id]['piece'] = \"\";\r\n        } else {\r\n            props.chessboard[props.id][\"piece\"] = \"white\";\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let props = this.props;\r\n\r\n        let label1\r\n        let label2\r\n        \r\n        if (props.queen) {\r\n            label1 = \"queen\";\r\n            label2 = \"remove\";\r\n        } else if (props.piece) {\r\n            label1 = \"queen\";\r\n            label2 = \"remove\";\r\n        } else {\r\n            label1 = \"black\";\r\n            label2 = \"white\";\r\n        }\r\n        \r\n        return (\r\n            <div className = \"contextMenu\" id={\"contextMenu\"}>\r\n                <div className=\"contextTop\" onClick={this.onClickTopHandler}> \r\n                {label1}\r\n                </div>\r\n                <hr/>\r\n                <div className=\"contextBot\" onClick={this.onClickBotHandler}> \r\n                {label2}\r\n                </div>\r\n                <br></br>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}"]}