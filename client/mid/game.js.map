{"version":3,"file":"game.js","sourceRoot":"","sources":["../src/game.ts"],"names":[],"mappings":"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","sourcesContent":["import Bot from \"./bot\";\r\nimport { Engine } from \"./engine\";\r\nimport createChessboard from \"./createChessboard\";\r\nimport { SIDE } from \"./config\";\r\n\r\nexport const enum GAMEMODE {\r\n  LOCAL,\r\n  BOT,\r\n  ONLINE\r\n}\r\n\r\ntype Color = \"black\" | \"white\";\r\n\r\nexport default class Game {\r\n\r\n  engine: Engine;\r\n  bot: Bot;\r\n  gameMode: GAMEMODE;\r\n  playerColor: Color;\r\n  botColor: Color;\r\n  side: SIDE;\r\n  label: string;\r\n  id: number;\r\n\r\n  constructor(gameMode: GAMEMODE, playerColor: Color, side: SIDE, label: string, id: number) {\r\n    this.engine = new Engine(side);\r\n    this.botColor = playerColor == \"white\" ? \"black\" : \"white\";\r\n    this.bot = new Bot(this.engine, this.botColor);\r\n    this.gameMode = gameMode;\r\n    this.playerColor = playerColor;\r\n    this.side = side;\r\n    this.label = label;\r\n    this.engine.chessboard = this.startNewGame();\r\n    this.id = id;\r\n  }\r\n\r\n  startNewGame() {\r\n    this.engine.chessboard = createChessboard(this.side);\r\n    if (this.playerColor == \"black\" && this.gameMode == GAMEMODE.BOT) {\r\n      this.bot.makeMove(this.engine.chessboard);\r\n    }\r\n    return this.engine.chessboard;\r\n  }\r\n\r\n  async clickHandler(event: any) {\r\n\r\n      let engine = this.engine\r\n\r\n      if (this.gameMode == GAMEMODE.BOT && engine.turn !== this.playerColor) {\r\n      } else {\r\n        if (event.target instanceof Element) {\r\n          let square = event.target.closest(\".square\");\r\n          if (square) {\r\n            if (square.getAttribute(\"id\")) {\r\n              let squareId = square.getAttribute(\"id\");\r\n              if (squareId) {\r\n                let board = JSON.stringify(this.engine.chessboard);\r\n                engine.performAction(parseInt(squareId), engine.chessboard);\r\n                if (board !== JSON.stringify(this.engine.chessboard)) {\r\n                  if (engine.turn == this.bot.color && this.gameMode == GAMEMODE.BOT) {\r\n                    await sleep(2000);\r\n                    this.bot.makeMove(this.engine.chessboard);\r\n                    this.engine.setWinner(this.engine.chessboard, this.engine.turn, this.engine.playerSide);\r\n                    document.getElementById('game')?.dispatchEvent(new Event('click', {\"bubbles\":true}));\r\n                    document.getElementById('games-preview')?.dispatchEvent(new Event('click', {\"bubbles\":true}))\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            engine.unselectPiece();\r\n          }\r\n        }\r\n      }\r\n\r\n  }\r\n}\r\n\r\n\r\nfunction sleep(ms: number) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}"]}